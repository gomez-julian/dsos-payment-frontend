{"version":3,"sources":["forms/AddUserForm.jsx","forms/EditUserForm.jsx","tables/UserTable.jsx","Host.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","referenceID","paymentAmount","paymentMethod","useState","user","setUser","handleInputChange","event","target","name","value","className","onSubmit","preventDefault","addUser","type","onChange","autoComplete","EditUserForm","currentUser","useEffect","updateUser","paymentID","onClick","setEditing","UserTable","users","length","map","key","paymentDate","paymentStatus","positivePaymentDate","editRow","deleteUser","colSpan","Host","App","address_cp","statusDelete","setUsers","setCurrentUser","editing","postData","a","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","React","then","res","catch","console","log","deleteRow","URI","updateRow","updatedPayment","Object","assign","status","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6fa515f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport \"../styles/bootstrap.min.css\"\r\n\r\nconst AddUserForm = props => {\r\n\tconst initialFormState = {\r\n\t\treferenceID: \"00000000\",\r\n\t\tpaymentAmount: 0,\r\n\t\tpaymentMethod: \"0000000000000000\",\r\n\t  };\r\n\tconst [ user, setUser ] = useState(initialFormState)\r\n\r\n\tconst handleInputChange = event => {\r\n\t\tconst { name, value } = event.target\r\n\r\n\t\tsetUser({ ...user, [name]: value })\r\n\t}\r\n\r\n\tconst onSubmitData=(event) => {\r\n\t\tevent.preventDefault()\r\n\t\t// if (!user.name || !user.username) return\r\n\r\n\t\tprops.addUser(user)\r\n\t\tsetUser(initialFormState)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card border-success mb-3\">\r\n  <div className=\"card-header\">Nuevo pago</div>\r\n  <div className=\"card-body\">\r\n  <form\r\n\t\t\tonSubmit={onSubmitData}\r\n\t\t>\r\n\t\t\t<div className='row'>\r\n\t\t\t<div className=\"md-form mb-2 col-lg-4\">\r\n\t\t\t<label>Referencia</label>\r\n      <input type=\"text\" name=\"referenceID\" value={user.referenceID} onChange={handleInputChange}\r\n\t  className=\"form-control validate\" \r\n\t  autoComplete=\"off\" />\r\n      </div>\r\n\t  <div className=\"md-form mb-2 col-lg-4\">\r\n\t  <label>Monto</label>\r\n      <input type=\"text\" name=\"paymentAmount\" value={user.paymentAmount} onChange={handleInputChange} \r\n\t  className=\"form-control validate\" \r\n\t  autoComplete=\"off\"/>\r\n      </div>\r\n\t  <div className=\"md-form mb-2 col-lg-4\">\r\n\t  <label>Tarjeta de pago</label>\r\n      <input type=\"text\" name=\"paymentMethod\" value={user.paymentMethod} onChange={handleInputChange}\r\n\t  className=\"form-control validate\" \r\n\t  autoComplete=\"off\" />\r\n\t  </div>\r\n\t  </div>\r\n\t\t\t<button className='btn btn-success'>Pagar</button>\r\n\t\t</form>\r\n  </div>\r\n</div>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default AddUserForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"../styles/bootstrap.min.css\"\r\n\r\n\r\nconst data = {\r\n  paymentID: 1,\r\n  referenceID: \"929184819\",\r\n  address_cp: null,\r\n  paymentDate: \"2022-06-03T13:56:36.625563\",\r\n  paymentStatus: \"C\",\r\n  positivePaymentDate: \"2022-06-03T17:43:23.579216\",\r\n  paymentAmount: 891,\r\n  paymentMethod: \"4718343217000000\",\r\n  statusDelete: null,\r\n};\r\n\r\n\r\nconst EditUserForm = props => {\r\n  const [ user, setUser ] = useState(props.currentUser)\r\n\r\n  useEffect(\r\n    () => {\r\n      setUser(props.currentUser)\r\n    },\r\n    [ props ]\r\n  )\r\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    setUser({ ...user, [name]: value })\r\n  }\r\n\r\n  return (\r\n    <div className=\"card border-primary mb-3\">\r\n  <div className=\"card-header\">Actualizar pago</div>\r\n  <div className=\"card-body\">\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault()\r\n        \r\n        props.updateUser(user.paymentID, user)\r\n      }}\r\n    >\r\n      <div className='row'>\r\n\t\t\t<div className=\"md-form mb-2 col-lg-4\">\r\n\t\t\t<label>Referencia</label>\r\n      <input type=\"text\" name=\"referenceID\" value={user.referenceID} onChange={handleInputChange}\r\n\t  className=\"form-control validate\" \r\n\t  autoComplete=\"off\" />\r\n      </div>\r\n\t  <div className=\"md-form mb-2 col-lg-4\">\r\n\t  <label>Monto</label>\r\n      <input type=\"text\" name=\"paymentAmount\" value={user.paymentAmount} onChange={handleInputChange} \r\n\t  className=\"form-control validate\" \r\n\t  autoComplete=\"off\"/>\r\n      </div>\r\n\t  <div className=\"md-form mb-2 col-lg-4\">\r\n\t  <label>Tarjeta de pago</label>\r\n      <input type=\"text\" name=\"paymentMethod\" value={user.paymentMethod} onChange={handleInputChange}\r\n\t  className=\"form-control validate\" \r\n\t  autoComplete=\"off\" />\r\n\t  </div>\r\n\t  </div>\r\n\r\n      <button className='btn btn-primary mx-1'>Actualizar</button>\r\n      <button onClick={() => props.setEditing(false)} className='btn btn-danger mx-1'>\r\n        Cancelar\r\n      </button>\r\n    </form>\r\n     </div>\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default EditUserForm\r\n","import React from \"react\";\r\nimport \"../styles/bootstrap.min.css\"\r\n\r\nconst data = {\r\n  paymentID: 1,\r\n  referenceID: \"929184819\",\r\n  address_cp: null,\r\n  paymentDate: \"2022-06-03T13:56:36.625563\",\r\n  paymentStatus: \"C\",\r\n  positivePaymentDate: \"2022-06-03T17:43:23.579216\",\r\n  paymentAmount: 891,\r\n  paymentMethod: \"4718343217000000\",\r\n  statusDelete: null,\r\n};\r\n\r\nconst UserTable = (props) => (\r\n  <div className=\"table-responsive\">\r\n  <table className=\"table table-bordered caption-top\">\r\n  <caption>Historial de pagos</caption>\r\n    <thead className=\"table-primary\">\r\n      <tr>\r\n        <th className=\"fs-6\">referenceID</th>\r\n        <th className=\"fs-6\">paymentDate</th>\r\n        <th className=\"fs-6\">paymentStatus</th>\r\n        <th className=\"fs-6\">positivePaymentDate</th>\r\n        <th className=\"fs-6\">paymentAmount</th>\r\n        <th className=\"fs-6\">paymentMethod</th>\r\n        <th className=\"fs-6\">Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.users.length > 0 ? (\r\n        props.users.map((user) => (\r\n          <tr key={user.paymentID}>\r\n            <td>{user.referenceID}</td>\r\n            <td>{user.paymentDate}</td>\r\n            <td>{user.paymentStatus}</td>\r\n            <td>{user.positivePaymentDate}</td>\r\n            <td>{user.paymentAmount}</td>\r\n            <td>{user.paymentMethod}</td>   \r\n            <td>\r\n              <button\r\n                onClick={() => {\r\n                  props.editRow(user);\r\n                }}\r\n                className=\"btn btn-info my-1\"\r\n              >\r\n                Editar\r\n              </button>\r\n              <button\r\n                onClick={() => props.deleteUser(user.paymentID)}\r\n                className=\"btn btn-danger my-1\"\r\n              >\r\n                Eliminar\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={7}>No hay pagos</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n  </div>\r\n);\r\n\r\nexport default UserTable;\r\n","const Local = 'http://localhost:8080/api/payment/'\r\nconst Development = 'https://payment-development.herokuapp.com/api/payment/'\r\n\r\nconst Host = Development\r\n\r\nexport { Host }\r\n","import React, { useState, Fragment } from \"react\";\r\nimport AddUserForm from \"./forms/AddUserForm\";\r\nimport EditUserForm from \"./forms/EditUserForm\";\r\nimport UserTable from \"./tables/UserTable\";\r\nimport { Host } from \"./Host\";\r\n\r\nconst App = () => {\r\n  // Data\r\n  const usersData2 = [\r\n    {\r\n      paymentID: 100,\r\n      referenceID: \"929184819\",\r\n      address_cp: null,\r\n      paymentDate: \"2022-06-03T13:56:36.625563\",\r\n      paymentStatus: \"C\",\r\n      positivePaymentDate: \"2022-06-03T17:43:23.579216\",\r\n      paymentAmount: 891,\r\n      paymentMethod: \"4718343217000000\",\r\n      statusDelete: null,\r\n    },\r\n    {\r\n      paymentID: 300,\r\n      referenceID: \"119004822\",\r\n      address_cp: null,\r\n      paymentDate: \"2022-06-03T22:49:31.839\",\r\n      paymentStatus: \"P\",\r\n      positivePaymentDate: null,\r\n      paymentAmount: 218,\r\n      paymentMethod: \"2340343217007896\",\r\n      statusDelete: null,\r\n    },\r\n  ];\r\n\r\n  const initialFormState = {\r\n\treferenceID: \"00000000\",\r\n\tpaymentAmount: 0,\r\n\tpaymentMethod: \"0000000000000000\",\r\n  };\r\n\r\n  // Setting state\r\n  const [users, setUsers] = useState(usersData2);\r\n  const [currentUser, setCurrentUser] = useState(initialFormState);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    fetch(Host + 'records')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUsers(data)\r\n      })\r\n      .catch(() => {\r\n        console.log(\"Error\");\r\n      });\r\n  }, [setUsers]);\r\n\r\n  async function postData(data = {}) {\r\n    // Opciones por defecto estan marcadas con un *\r\n    const response = await fetch(Host + 'pay', {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json(); // parses JSON response into native JavaScript objects\r\n  }\r\n\r\n  const deleteRow = async (paymentID, data) => {\r\n    const URI = Host + 'delete/' + paymentID\r\n    console.log(URI)\r\n    const response = await fetch(URI, {\r\n        method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n      });\r\n      console.log(response.json())\r\n}\r\n\r\nconst updateRow = async (paymentID, data) => {\r\n  const URI = Host + 'update/' + paymentID\r\n  console.log(URI)\r\n  const response = await fetch(URI, {\r\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response\r\n}\r\n\r\n  // CRUD operations\r\n  const addUser = async (user) => {\r\n    // user.paymentID = users.length + 1;\r\n    // setUsers([...users, user]);\r\n    console.log(user)\r\n    postData(user)\r\n  .then(data => {\r\n    console.log(data); // JSON data parsed by `data.json()` call\r\n    setUsers([...users, data]);\r\n  });\r\n      \r\n  };\r\n\r\n  const deleteUser = (paymentID) => {\r\n    setEditing(false);\r\n    deleteRow(paymentID);\r\n    setUsers(users.filter((user) => user.paymentID !== paymentID));\r\n  };\r\n\r\n  const updateUser = (paymentID, updatedPayment) => {\r\n    setEditing(false);\r\n    const body = Object.assign({}, updatedPayment)\r\n    delete body.paymentID\r\n    console.log(body)\r\n    updateRow(paymentID,body).then(response => {\r\n      console.log(response.status);\r\n      console.log(response.json());  // JSON data parsed by `data.json()` call\r\n    });\r\n    setUsers(users.map((user) => (user.paymentID === paymentID ? updatedPayment : user)));\r\n  };\r\n\r\n  const editRow = (user) => {\r\n    setEditing(true);\r\n\r\n    setCurrentUser({\r\n\t\tpaymentID: user.paymentID,\r\n\t\treferenceID: user.referenceID,\r\n\t\taddress_cp: user.address_cp,\r\n\t\tpaymentDate: user.paymentDate,\r\n\t\tpaymentStatus: user.paymentStatus,\r\n\t\tpositivePaymentDate: user.positivePaymentDate,\r\n\t\tpaymentAmount: user.paymentAmount,\r\n\t\tpaymentMethod: user.paymentMethod,\r\n\t\tstatusDelete: user.statusDelete,\r\n\t});\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>CRUD de pagos</h1>\r\n      <div className=\"flex-row\">\r\n        <div className=\"flex-large\">\r\n          {editing ? (\r\n            <Fragment>\r\n              <EditUserForm\r\n                editing={editing}\r\n                setEditing={setEditing}\r\n                currentUser={currentUser}\r\n                updateUser={updateUser}\r\n              />\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <AddUserForm addUser={addUser} />\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n        <div className=\"flex-large\">\r\n          <UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}